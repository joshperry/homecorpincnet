RULE_FILE=/tmp/k8s_rules

if [ -f $RULE_FILE ]; then
  # restore k8s custom chains
	iptables-restore -n < $RULE_FILE

	# insert jumps from filter table chains
	iptables -t filter -I INPUT 1 -j KUBE-FIREWALL
	iptables -t filter -I INPUT 2 -m conntrack --ctstate NEW -m comment --comment "kubernetes externally-visible service portals" -j KUBE-EXTERNAL-SERVICES

  iptables -t filter -I OUTPUT 1 -j KUBE-FIREWALL
  iptables -t filter -I OUTPUT 2 -m conntrack --ctstate NEW -m comment --comment "kubernetes service portals" -j KUBE-SERVICES

	iptables -t filter -I FORWARD 1 -m comment --comment "kubernetes forwarding rules" -j KUBE-FORWARD

	# insert jumps from nat table chains
	iptables -t nat -I PREROUTING 1 -m comment --comment "kubernetes service portals" -j KUBE-SERVICES

  iptables -t nat -I OUTPUT 1 -m comment --comment "kubernetes service portals" -j KUBE-SERVICES

  iptables -t nat -I POSTROUTING 1 -m comment --comment "kubernetes postrouting rules" -j KUBE-POSTROUTING
  iptables -t nat -I POSTROUTING 2 -m comment --comment "ip-masq-agent: ensure nat POSTROUTING directs all non-LOCAL destination traffic to our custom IP-MASQ-AGENT chain" \
		-m addrtype ! --dst-type LOCAL -j IP-MASQ-AGENT

  rm -rf $RULE_FILE
fi

# vim: ts=2 syntax=sh
